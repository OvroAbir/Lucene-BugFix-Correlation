{
  "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
  "id": "13295504",
  "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504",
  "key": "LUCENE-9300",
  "fields": {
    "fixVersions": [
      {
        "self": "https://issues.apache.org/jira/rest/api/2/version/12344814",
        "id": "12344814",
        "description": "Unstable release branch",
        "name": "master (9.0)",
        "archived": false,
        "released": false
      },
      {
        "self": "https://issues.apache.org/jira/rest/api/2/version/12345529",
        "id": "12345529",
        "description": "Bug fix release after 7.7.2",
        "name": "7.7.3",
        "archived": false,
        "released": false
      },
      {
        "self": "https://issues.apache.org/jira/rest/api/2/version/12347752",
        "id": "12347752",
        "name": "8.6",
        "archived": false,
        "released": false
      },
      {
        "self": "https://issues.apache.org/jira/rest/api/2/version/12347823",
        "id": "12347823",
        "description": "",
        "name": "8.5.1",
        "archived": false,
        "released": true,
        "releaseDate": "2020-04-16"
      }
    ],
    "resolution": {
      "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
      "id": "1",
      "description": "A fix for this issue is checked into the tree and tested.",
      "name": "Fixed"
    },
    "customfield_12312322": null,
    "customfield_12312323": null,
    "customfield_12310420": "9223372036854775807",
    "customfield_12312320": null,
    "customfield_12312321": null,
    "customfield_12312328": null,
    "customfield_12312329": null,
    "customfield_12312326": null,
    "customfield_12310300": null,
    "customfield_12312327": null,
    "customfield_12312324": null,
    "customfield_12312720": null,
    "customfield_12312325": null,
    "lastViewed": "2020-04-29T23:49:39.085+0000",
    "priority": {
      "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
      "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
      "name": "Major",
      "id": "3"
    },
    "labels": [],
    "customfield_12312333": null,
    "customfield_12312334": null,
    "customfield_12313422": "false",
    "customfield_12310310": "0.0",
    "customfield_12312331": null,
    "customfield_12312332": null,
    "aggregatetimeoriginalestimate": null,
    "timeestimate": 0,
    "customfield_12312330": null,
    "versions": [],
    "customfield_12311120": null,
    "customfield_12313826": null,
    "issuelinks": [],
    "customfield_12312339": null,
    "customfield_12313825": null,
    "assignee": null,
    "customfield_12312337": null,
    "customfield_12313823": null,
    "customfield_12312338": null,
    "customfield_12313822": null,
    "customfield_12311920": null,
    "customfield_12312335": null,
    "customfield_12313821": null,
    "customfield_12312336": null,
    "customfield_12313820": null,
    "status": {
      "self": "https://issues.apache.org/jira/rest/api/2/status/6",
      "description": "The issue is considered finished, the resolution is correct. Issues which are closed can be reopened.",
      "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
      "name": "Closed",
      "id": "6",
      "statusCategory": {
        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
        "id": 3,
        "key": "done",
        "colorName": "green",
        "name": "Done"
      }
    },
    "components": [],
    "customfield_12310120": [
      {
        "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10121",
        "value": "New",
        "id": "10121"
      }
    ],
    "customfield_12312026": null,
    "customfield_12312023": null,
    "customfield_12312024": null,
    "aggregatetimeestimate": 0,
    "customfield_12312022": null,
    "customfield_12310921": null,
    "customfield_12310920": "9223372036854775807",
    "customfield_12312823": null,
    "creator": {
      "self": "https://issues.apache.org/jira/rest/api/2/user?username=jim.ferenczi",
      "name": "jim.ferenczi",
      "key": "jim.ferenczi",
      "avatarUrls": {
        "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
      },
      "displayName": "Jim Ferenczi",
      "active": true,
      "timeZone": "Etc/UTC"
    },
    "subtasks": [],
    "reporter": {
      "self": "https://issues.apache.org/jira/rest/api/2/user?username=jim.ferenczi",
      "name": "jim.ferenczi",
      "key": "jim.ferenczi",
      "avatarUrls": {
        "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
      },
      "displayName": "Jim Ferenczi",
      "active": true,
      "timeZone": "Etc/UTC"
    },
    "aggregateprogress": {
      "progress": 15000,
      "total": 15000,
      "percent": 100
    },
    "customfield_12313520": null,
    "customfield_12310250": null,
    "progress": {
      "progress": 15000,
      "total": 15000,
      "percent": 100
    },
    "customfield_12313924": null,
    "votes": {
      "self": "https://issues.apache.org/jira/rest/api/2/issue/LUCENE-9300/votes",
      "votes": 0,
      "hasVoted": false
    },
    "worklog": {
      "startAt": 0,
      "maxResults": 20,
      "total": 29,
      "worklogs": [
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/413981",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jimczi commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394\n \n \n   Today a doc values update creates a new field infos file that contains the original field infos updated for the new generation as well as the new fields created by the doc values update.\r\n   \r\n   However existing fields are cloned through the global fields (shared in the index writer) instead of the local ones (present in the segment).\r\n   In practice this is not an issue since field numbers are shared between segments created by the same index writer.\r\n   But this assumption doesn't hold for segments created by different writers and added through IndexWriter#addIndexes(Directory).\r\n   In this case, the field number of the same field can differ between segments so any doc values update can corrupt the index\r\n   by assigning the wrong field number to an existing field in the next generation.\r\n   \r\n   When this happens, queries and merges can access wrong fields without throwing any error, leading to a silent corruption in the index.\r\n   \r\n   This change ensures that we preserve local field numbers when creating\r\n   a new field infos generation.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-01T11:05:05.702+0000",
          "updated": "2020-04-01T11:05:05.702+0000",
          "started": "2020-04-01T11:05:05.702+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "413981",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414002",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "juanka588 commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r401559955\n \n \n\n ##########\n File path: lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates.java\n ##########\n @@ -1483,6 +1484,81 @@ public void testAddIndexes() throws Exception {\n     IOUtils.close(dir1, dir2);\n   }\n \n+  public void testUpdatesAterAddIndexes() throws Exception {\n \n Review comment:\n   after?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-01T11:58:23.075+0000",
          "updated": "2020-04-01T11:58:23.075+0000",
          "started": "2020-04-01T11:58:23.074+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414002",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414044",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jpountz commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r401619000\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -543,27 +543,30 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n       \n       try {\n         // clone FieldInfos so that we can update their dvGen separately from\n-        // the reader's infos and write them to a new fieldInfos_gen file\n-        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n-        // cannot use builder.add(reader.getFieldInfos()) because it does not\n-        // clone FI.attributes as well FI.dvGen\n+        // the reader's infos and write them to a new fieldInfos_gen file.\n+        Map<String, FieldInfo> newFields = new HashMap<>();\n         for (FieldInfo fi : reader.getFieldInfos()) {\n-          FieldInfo clone = builder.add(fi);\n-          // copy the stuff FieldInfos.Builder doesn't copy\n-          for (Entry<String,String> e : fi.attributes().entrySet()) {\n-            clone.putAttribute(e.getKey(), e.getValue());\n-          }\n-          clone.setDocValuesGen(fi.getDocValuesGen());\n+          // cannot use builder.add(fi) because it does not preserve\n+          // the local field number. Field numbers can be different from the global ones\n+          // if the segment was created externally (with IndexWriter#addIndexes(Directory)).\n+          FieldInfo clone = new FieldInfo(fi);\n+          newFields.put(clone.name, clone);\n         }\n \n         // create new fields with the right DV type\n+        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n         for (List<DocValuesFieldUpdates> updates : pendingDVUpdates.values()) {\n           DocValuesFieldUpdates update = updates.get(0);\n-          FieldInfo fieldInfo = builder.getOrAdd(update.field);\n-          fieldInfo.setDocValuesType(update.type);\n+          FieldInfo fi = newFields.get(update.field);\n+          if (fi == null) {\n+            // the field is not present in this segment so we can fallback to the global fields.\n+            fi = builder.getOrAdd(update.field);\n \n Review comment:\n   Had a quick discussion about this line with Jim. This isn't good enough as this might return a field number that already exists in the reader if the field exists in the writer with a number that it less than the number of fields in the reader.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-01T13:34:50.442+0000",
          "updated": "2020-04-01T13:34:50.442+0000",
          "started": "2020-04-01T13:34:50.442+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414044",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414070",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jimczi commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r401672435\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -543,27 +543,30 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n       \n       try {\n         // clone FieldInfos so that we can update their dvGen separately from\n-        // the reader's infos and write them to a new fieldInfos_gen file\n-        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n-        // cannot use builder.add(reader.getFieldInfos()) because it does not\n-        // clone FI.attributes as well FI.dvGen\n+        // the reader's infos and write them to a new fieldInfos_gen file.\n+        Map<String, FieldInfo> newFields = new HashMap<>();\n         for (FieldInfo fi : reader.getFieldInfos()) {\n-          FieldInfo clone = builder.add(fi);\n-          // copy the stuff FieldInfos.Builder doesn't copy\n-          for (Entry<String,String> e : fi.attributes().entrySet()) {\n-            clone.putAttribute(e.getKey(), e.getValue());\n-          }\n-          clone.setDocValuesGen(fi.getDocValuesGen());\n+          // cannot use builder.add(fi) because it does not preserve\n+          // the local field number. Field numbers can be different from the global ones\n+          // if the segment was created externally (with IndexWriter#addIndexes(Directory)).\n+          FieldInfo clone = new FieldInfo(fi);\n+          newFields.put(clone.name, clone);\n         }\n \n         // create new fields with the right DV type\n+        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n         for (List<DocValuesFieldUpdates> updates : pendingDVUpdates.values()) {\n           DocValuesFieldUpdates update = updates.get(0);\n-          FieldInfo fieldInfo = builder.getOrAdd(update.field);\n-          fieldInfo.setDocValuesType(update.type);\n+          FieldInfo fi = newFields.get(update.field);\n+          if (fi == null) {\n+            // the field is not present in this segment so we can fallback to the global fields.\n+            fi = builder.getOrAdd(update.field);\n \n Review comment:\n   How to introduce the same bug but the other way around :(. Thanks for catching this Adrien. I pushed https://github.com/apache/lucene-solr/pull/1394/commits/abd5e08170cc8b7963c0aff3d58afa5766afcb32 to handle this case properly.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-01T14:46:10.116+0000",
          "updated": "2020-04-01T14:46:10.116+0000",
          "started": "2020-04-01T14:46:10.116+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414070",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414071",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jimczi commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r401672524\n \n \n\n ##########\n File path: lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates.java\n ##########\n @@ -1483,6 +1484,81 @@ public void testAddIndexes() throws Exception {\n     IOUtils.close(dir1, dir2);\n   }\n \n+  public void testUpdatesAterAddIndexes() throws Exception {\n \n Review comment:\n   thanks, https://github.com/apache/lucene-solr/pull/1394/commits/abd5e08170cc8b7963c0aff3d58afa5766afcb32\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-01T14:46:17.746+0000",
          "updated": "2020-04-01T14:46:17.746+0000",
          "started": "2020-04-01T14:46:17.746+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414071",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414106",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jpountz commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r401719320\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -543,27 +543,36 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n       \n       try {\n         // clone FieldInfos so that we can update their dvGen separately from\n-        // the reader's infos and write them to a new fieldInfos_gen file\n-        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n-        // cannot use builder.add(reader.getFieldInfos()) because it does not\n-        // clone FI.attributes as well FI.dvGen\n+        // the reader's infos and write them to a new fieldInfos_gen file.\n+        int maxFieldNumber = -1;\n+        Map<String, FieldInfo> newFields = new HashMap<>();\n         for (FieldInfo fi : reader.getFieldInfos()) {\n-          FieldInfo clone = builder.add(fi);\n-          // copy the stuff FieldInfos.Builder doesn't copy\n-          for (Entry<String,String> e : fi.attributes().entrySet()) {\n-            clone.putAttribute(e.getKey(), e.getValue());\n-          }\n-          clone.setDocValuesGen(fi.getDocValuesGen());\n+          // cannot use builder.add(fi) because it does not preserve\n+          // the local field number. Field numbers can be different from the global ones\n+          // if the segment was created externally (with IndexWriter#addIndexes(Directory)).\n+          FieldInfo clone = cloneFieldInfo(fi, fi.number);\n+          newFields.put(clone.name, clone);\n+          maxFieldNumber = Math.max(clone.number, maxFieldNumber);\n         }\n \n         // create new fields with the right DV type\n+        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n         for (List<DocValuesFieldUpdates> updates : pendingDVUpdates.values()) {\n           DocValuesFieldUpdates update = updates.get(0);\n-          FieldInfo fieldInfo = builder.getOrAdd(update.field);\n-          fieldInfo.setDocValuesType(update.type);\n+          FieldInfo fi = newFields.get(update.field);\n+          if (fi == null) {\n+            // the field is not present in this segment so we can fallback to the global fields.\n+            fi = builder.getOrAdd(update.field);\n+            if (fi.number <= maxFieldNumber) {\n+              // the global field number is already used in this segment for a different field so we force a new one locally.\n+              fi = cloneFieldInfo(fi, ++maxFieldNumber);\n \n Review comment:\n   Do we need to set the doc-value type before cloning to make sure the doc-value type is set on the writer? I also wonder if we should use `FieldInfos.Builder` since this logic you implemented looks similar to `FieldInfos.Builder#add`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-01T15:48:06.134+0000",
          "updated": "2020-04-01T15:48:06.134+0000",
          "started": "2020-04-01T15:48:06.134+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414106",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414140",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jimczi commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r401749799\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -543,27 +543,36 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n       \n       try {\n         // clone FieldInfos so that we can update their dvGen separately from\n-        // the reader's infos and write them to a new fieldInfos_gen file\n-        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n-        // cannot use builder.add(reader.getFieldInfos()) because it does not\n-        // clone FI.attributes as well FI.dvGen\n+        // the reader's infos and write them to a new fieldInfos_gen file.\n+        int maxFieldNumber = -1;\n+        Map<String, FieldInfo> newFields = new HashMap<>();\n         for (FieldInfo fi : reader.getFieldInfos()) {\n-          FieldInfo clone = builder.add(fi);\n-          // copy the stuff FieldInfos.Builder doesn't copy\n-          for (Entry<String,String> e : fi.attributes().entrySet()) {\n-            clone.putAttribute(e.getKey(), e.getValue());\n-          }\n-          clone.setDocValuesGen(fi.getDocValuesGen());\n+          // cannot use builder.add(fi) because it does not preserve\n+          // the local field number. Field numbers can be different from the global ones\n+          // if the segment was created externally (with IndexWriter#addIndexes(Directory)).\n+          FieldInfo clone = cloneFieldInfo(fi, fi.number);\n+          newFields.put(clone.name, clone);\n+          maxFieldNumber = Math.max(clone.number, maxFieldNumber);\n         }\n \n         // create new fields with the right DV type\n+        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n         for (List<DocValuesFieldUpdates> updates : pendingDVUpdates.values()) {\n           DocValuesFieldUpdates update = updates.get(0);\n-          FieldInfo fieldInfo = builder.getOrAdd(update.field);\n-          fieldInfo.setDocValuesType(update.type);\n+          FieldInfo fi = newFields.get(update.field);\n+          if (fi == null) {\n+            // the field is not present in this segment so we can fallback to the global fields.\n+            fi = builder.getOrAdd(update.field);\n+            if (fi.number <= maxFieldNumber) {\n+              // the global field number is already used in this segment for a different field so we force a new one locally.\n+              fi = cloneFieldInfo(fi, ++maxFieldNumber);\n \n Review comment:\n   > I also wonder if we should use FieldInfos.Builder since this logic you implemented looks similar to FieldInfos.Builder#add.\r\n   \r\n   I don't think it works since the logic there is to use the global field number if the field already exists in another segment. In the logic above we try to re-assign the global field number locally since it clashes with a local one.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-01T16:31:46.854+0000",
          "updated": "2020-04-01T16:31:46.854+0000",
          "started": "2020-04-01T16:31:46.853+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414140",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414144",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jimczi commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r401750154\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -543,27 +543,36 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n       \n       try {\n         // clone FieldInfos so that we can update their dvGen separately from\n-        // the reader's infos and write them to a new fieldInfos_gen file\n-        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n-        // cannot use builder.add(reader.getFieldInfos()) because it does not\n-        // clone FI.attributes as well FI.dvGen\n+        // the reader's infos and write them to a new fieldInfos_gen file.\n+        int maxFieldNumber = -1;\n+        Map<String, FieldInfo> newFields = new HashMap<>();\n         for (FieldInfo fi : reader.getFieldInfos()) {\n-          FieldInfo clone = builder.add(fi);\n-          // copy the stuff FieldInfos.Builder doesn't copy\n-          for (Entry<String,String> e : fi.attributes().entrySet()) {\n-            clone.putAttribute(e.getKey(), e.getValue());\n-          }\n-          clone.setDocValuesGen(fi.getDocValuesGen());\n+          // cannot use builder.add(fi) because it does not preserve\n+          // the local field number. Field numbers can be different from the global ones\n+          // if the segment was created externally (with IndexWriter#addIndexes(Directory)).\n+          FieldInfo clone = cloneFieldInfo(fi, fi.number);\n+          newFields.put(clone.name, clone);\n+          maxFieldNumber = Math.max(clone.number, maxFieldNumber);\n         }\n \n         // create new fields with the right DV type\n+        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n         for (List<DocValuesFieldUpdates> updates : pendingDVUpdates.values()) {\n           DocValuesFieldUpdates update = updates.get(0);\n-          FieldInfo fieldInfo = builder.getOrAdd(update.field);\n-          fieldInfo.setDocValuesType(update.type);\n+          FieldInfo fi = newFields.get(update.field);\n+          if (fi == null) {\n+            // the field is not present in this segment so we can fallback to the global fields.\n+            fi = builder.getOrAdd(update.field);\n+            if (fi.number <= maxFieldNumber) {\n+              // the global field number is already used in this segment for a different field so we force a new one locally.\n+              fi = cloneFieldInfo(fi, ++maxFieldNumber);\n \n Review comment:\n   > Do we need to set the doc-value type before cloning to make sure the doc-value type is set on the writer?\r\n   \r\n   thanks, I pushed https://github.com/apache/lucene-solr/pull/1394/commits/090ef78171dfe671b0fb1ab238951fdd617bd65c\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-01T16:32:13.427+0000",
          "updated": "2020-04-01T16:32:13.427+0000",
          "started": "2020-04-01T16:32:13.427+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414144",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414616",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jpountz commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r402225938\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -543,27 +543,39 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n       \n       try {\n         // clone FieldInfos so that we can update their dvGen separately from\n-        // the reader's infos and write them to a new fieldInfos_gen file\n-        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n-        // cannot use builder.add(reader.getFieldInfos()) because it does not\n-        // clone FI.attributes as well FI.dvGen\n+        // the reader's infos and write them to a new fieldInfos_gen file.\n+        int maxFieldNumber = -1;\n+        Map<String, FieldInfo> newFields = new HashMap<>();\n         for (FieldInfo fi : reader.getFieldInfos()) {\n-          FieldInfo clone = builder.add(fi);\n-          // copy the stuff FieldInfos.Builder doesn't copy\n-          for (Entry<String,String> e : fi.attributes().entrySet()) {\n-            clone.putAttribute(e.getKey(), e.getValue());\n-          }\n-          clone.setDocValuesGen(fi.getDocValuesGen());\n+          // cannot use builder.add(fi) because it does not preserve\n+          // the local field number. Field numbers can be different from the global ones\n+          // if the segment was created externally (with IndexWriter#addIndexes(Directory)).\n+          FieldInfo clone = cloneFieldInfo(fi, fi.number);\n+          newFields.put(clone.name, clone);\n+          maxFieldNumber = Math.max(clone.number, maxFieldNumber);\n         }\n \n         // create new fields with the right DV type\n+        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n         for (List<DocValuesFieldUpdates> updates : pendingDVUpdates.values()) {\n           DocValuesFieldUpdates update = updates.get(0);\n-          FieldInfo fieldInfo = builder.getOrAdd(update.field);\n-          fieldInfo.setDocValuesType(update.type);\n+          FieldInfo globalFieldInfo =  builder.getOrAdd(update.field);\n+          globalFieldInfo.setDocValuesType(update.type);\n \n Review comment:\n   Sorry I wasn't sure how that worked when doing previous reviews, but the field infos of the writer should be updated when the doc-value update is performed. So the FieldInfo should always exist at this point and the doc-value type should always be correct. So we should be able to assert here instead of calling `setDocValuesType`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-02T11:20:16.902+0000",
          "updated": "2020-04-02T11:20:16.902+0000",
          "started": "2020-04-02T11:20:16.902+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414616",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414617",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jpountz commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r402231946\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -543,27 +543,39 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n       \n       try {\n         // clone FieldInfos so that we can update their dvGen separately from\n-        // the reader's infos and write them to a new fieldInfos_gen file\n-        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n-        // cannot use builder.add(reader.getFieldInfos()) because it does not\n-        // clone FI.attributes as well FI.dvGen\n+        // the reader's infos and write them to a new fieldInfos_gen file.\n+        int maxFieldNumber = -1;\n+        Map<String, FieldInfo> newFields = new HashMap<>();\n         for (FieldInfo fi : reader.getFieldInfos()) {\n-          FieldInfo clone = builder.add(fi);\n-          // copy the stuff FieldInfos.Builder doesn't copy\n-          for (Entry<String,String> e : fi.attributes().entrySet()) {\n-            clone.putAttribute(e.getKey(), e.getValue());\n-          }\n-          clone.setDocValuesGen(fi.getDocValuesGen());\n+          // cannot use builder.add(fi) because it does not preserve\n+          // the local field number. Field numbers can be different from the global ones\n+          // if the segment was created externally (with IndexWriter#addIndexes(Directory)).\n+          FieldInfo clone = cloneFieldInfo(fi, fi.number);\n+          newFields.put(clone.name, clone);\n+          maxFieldNumber = Math.max(clone.number, maxFieldNumber);\n         }\n \n         // create new fields with the right DV type\n+        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n         for (List<DocValuesFieldUpdates> updates : pendingDVUpdates.values()) {\n           DocValuesFieldUpdates update = updates.get(0);\n-          FieldInfo fieldInfo = builder.getOrAdd(update.field);\n-          fieldInfo.setDocValuesType(update.type);\n+          FieldInfo globalFieldInfo =  builder.getOrAdd(update.field);\n+          globalFieldInfo.setDocValuesType(update.type);\n+          FieldInfo segmentFieldInfo = newFields.get(update.field);\n+          if (segmentFieldInfo == null) {\n+            // the field is not present in this segment so we can fallback to the global fields.\n+            if (globalFieldInfo.number <= maxFieldNumber) {\n+              // the global field number is already used in this segment for a different field so we force a new one locally.\n+              globalFieldInfo = cloneFieldInfo(globalFieldInfo, ++maxFieldNumber);\n+            }\n+            newFields.put(update.field, globalFieldInfo);\n+          } else {\n+            segmentFieldInfo.setDocValuesType(update.type);\n+            newFields.put(update.field, segmentFieldInfo);\n \n Review comment:\n   this `put` call should be unnecessary since the field is already in the map?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-02T11:20:16.965+0000",
          "updated": "2020-04-02T11:20:16.965+0000",
          "started": "2020-04-02T11:20:16.965+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414617",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414618",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jpountz commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r402228065\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -543,27 +543,39 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n       \n       try {\n         // clone FieldInfos so that we can update their dvGen separately from\n-        // the reader's infos and write them to a new fieldInfos_gen file\n-        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n-        // cannot use builder.add(reader.getFieldInfos()) because it does not\n-        // clone FI.attributes as well FI.dvGen\n+        // the reader's infos and write them to a new fieldInfos_gen file.\n+        int maxFieldNumber = -1;\n+        Map<String, FieldInfo> newFields = new HashMap<>();\n         for (FieldInfo fi : reader.getFieldInfos()) {\n-          FieldInfo clone = builder.add(fi);\n-          // copy the stuff FieldInfos.Builder doesn't copy\n-          for (Entry<String,String> e : fi.attributes().entrySet()) {\n-            clone.putAttribute(e.getKey(), e.getValue());\n-          }\n-          clone.setDocValuesGen(fi.getDocValuesGen());\n+          // cannot use builder.add(fi) because it does not preserve\n+          // the local field number. Field numbers can be different from the global ones\n+          // if the segment was created externally (with IndexWriter#addIndexes(Directory)).\n+          FieldInfo clone = cloneFieldInfo(fi, fi.number);\n+          newFields.put(clone.name, clone);\n+          maxFieldNumber = Math.max(clone.number, maxFieldNumber);\n         }\n \n         // create new fields with the right DV type\n+        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n         for (List<DocValuesFieldUpdates> updates : pendingDVUpdates.values()) {\n           DocValuesFieldUpdates update = updates.get(0);\n-          FieldInfo fieldInfo = builder.getOrAdd(update.field);\n-          fieldInfo.setDocValuesType(update.type);\n+          FieldInfo globalFieldInfo =  builder.getOrAdd(update.field);\n+          globalFieldInfo.setDocValuesType(update.type);\n \n Review comment:\n   Sorry I suggested this on the previous review, but the doc-value type is actually supposed to be set on the updateDocValue call, so we should even be able to assert that the doc-value type is correct at this stage instead of setting it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-02T11:20:16.968+0000",
          "updated": "2020-04-02T11:20:16.968+0000",
          "started": "2020-04-02T11:20:16.968+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414618",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414619",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jpountz commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r402231793\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -543,27 +543,39 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n       \n       try {\n         // clone FieldInfos so that we can update their dvGen separately from\n-        // the reader's infos and write them to a new fieldInfos_gen file\n-        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n-        // cannot use builder.add(reader.getFieldInfos()) because it does not\n-        // clone FI.attributes as well FI.dvGen\n+        // the reader's infos and write them to a new fieldInfos_gen file.\n+        int maxFieldNumber = -1;\n+        Map<String, FieldInfo> newFields = new HashMap<>();\n         for (FieldInfo fi : reader.getFieldInfos()) {\n-          FieldInfo clone = builder.add(fi);\n-          // copy the stuff FieldInfos.Builder doesn't copy\n-          for (Entry<String,String> e : fi.attributes().entrySet()) {\n-            clone.putAttribute(e.getKey(), e.getValue());\n-          }\n-          clone.setDocValuesGen(fi.getDocValuesGen());\n+          // cannot use builder.add(fi) because it does not preserve\n+          // the local field number. Field numbers can be different from the global ones\n+          // if the segment was created externally (with IndexWriter#addIndexes(Directory)).\n+          FieldInfo clone = cloneFieldInfo(fi, fi.number);\n+          newFields.put(clone.name, clone);\n+          maxFieldNumber = Math.max(clone.number, maxFieldNumber);\n         }\n \n         // create new fields with the right DV type\n+        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n         for (List<DocValuesFieldUpdates> updates : pendingDVUpdates.values()) {\n           DocValuesFieldUpdates update = updates.get(0);\n-          FieldInfo fieldInfo = builder.getOrAdd(update.field);\n-          fieldInfo.setDocValuesType(update.type);\n+          FieldInfo globalFieldInfo =  builder.getOrAdd(update.field);\n+          globalFieldInfo.setDocValuesType(update.type);\n+          FieldInfo segmentFieldInfo = newFields.get(update.field);\n+          if (segmentFieldInfo == null) {\n+            // the field is not present in this segment so we can fallback to the global fields.\n+            if (globalFieldInfo.number <= maxFieldNumber) {\n+              // the global field number is already used in this segment for a different field so we force a new one locally.\n+              globalFieldInfo = cloneFieldInfo(globalFieldInfo, ++maxFieldNumber);\n+            }\n \n Review comment:\n   I think we should either have an `else` branch that updates the `maxFieldNumber` to avoid conflicts (in case dv updates introduce multiple fields) or always clone the `FieldInfo` to update the number. I have a preference for the latter since it requires fewer branches and makes the code easier to reason about?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-02T11:20:17.147+0000",
          "updated": "2020-04-02T11:20:17.147+0000",
          "started": "2020-04-02T11:20:17.147+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414619",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414620",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jpountz commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r402234114\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -543,27 +543,39 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n       \n       try {\n         // clone FieldInfos so that we can update their dvGen separately from\n-        // the reader's infos and write them to a new fieldInfos_gen file\n-        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n-        // cannot use builder.add(reader.getFieldInfos()) because it does not\n-        // clone FI.attributes as well FI.dvGen\n+        // the reader's infos and write them to a new fieldInfos_gen file.\n+        int maxFieldNumber = -1;\n+        Map<String, FieldInfo> newFields = new HashMap<>();\n         for (FieldInfo fi : reader.getFieldInfos()) {\n-          FieldInfo clone = builder.add(fi);\n-          // copy the stuff FieldInfos.Builder doesn't copy\n-          for (Entry<String,String> e : fi.attributes().entrySet()) {\n-            clone.putAttribute(e.getKey(), e.getValue());\n-          }\n-          clone.setDocValuesGen(fi.getDocValuesGen());\n+          // cannot use builder.add(fi) because it does not preserve\n+          // the local field number. Field numbers can be different from the global ones\n+          // if the segment was created externally (with IndexWriter#addIndexes(Directory)).\n \n Review comment:\n   ```suggestion\r\n             // if the segment was created externally (and added to this index with IndexWriter#addIndexes(Directory)).\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-02T11:20:17.198+0000",
          "updated": "2020-04-02T11:20:17.198+0000",
          "started": "2020-04-02T11:20:17.198+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414620",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414621",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jpountz commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r402237062\n \n \n\n ##########\n File path: lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates.java\n ##########\n @@ -1483,6 +1484,83 @@ public void testAddIndexes() throws Exception {\n     IOUtils.close(dir1, dir2);\n   }\n \n+  public void testUpdatesAfterAddIndexes() throws Exception {\n \n Review comment:\n   It might be better to split into one unit test for the addIndexes case when the updated field already exists in the segment, and another one for the case when the updated field doesn't exist in the segment yet?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-02T11:20:17.201+0000",
          "updated": "2020-04-02T11:20:17.201+0000",
          "started": "2020-04-02T11:20:17.201+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414621",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414622",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jpountz commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r402233937\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -543,27 +543,39 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n       \n       try {\n         // clone FieldInfos so that we can update their dvGen separately from\n-        // the reader's infos and write them to a new fieldInfos_gen file\n-        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n-        // cannot use builder.add(reader.getFieldInfos()) because it does not\n-        // clone FI.attributes as well FI.dvGen\n+        // the reader's infos and write them to a new fieldInfos_gen file.\n+        int maxFieldNumber = -1;\n+        Map<String, FieldInfo> newFields = new HashMap<>();\n         for (FieldInfo fi : reader.getFieldInfos()) {\n-          FieldInfo clone = builder.add(fi);\n-          // copy the stuff FieldInfos.Builder doesn't copy\n-          for (Entry<String,String> e : fi.attributes().entrySet()) {\n-            clone.putAttribute(e.getKey(), e.getValue());\n-          }\n-          clone.setDocValuesGen(fi.getDocValuesGen());\n+          // cannot use builder.add(fi) because it does not preserve\n+          // the local field number. Field numbers can be different from the global ones\n+          // if the segment was created externally (with IndexWriter#addIndexes(Directory)).\n+          FieldInfo clone = cloneFieldInfo(fi, fi.number);\n+          newFields.put(clone.name, clone);\n+          maxFieldNumber = Math.max(clone.number, maxFieldNumber);\n         }\n \n         // create new fields with the right DV type\n+        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n         for (List<DocValuesFieldUpdates> updates : pendingDVUpdates.values()) {\n           DocValuesFieldUpdates update = updates.get(0);\n-          FieldInfo fieldInfo = builder.getOrAdd(update.field);\n-          fieldInfo.setDocValuesType(update.type);\n+          FieldInfo globalFieldInfo =  builder.getOrAdd(update.field);\n+          globalFieldInfo.setDocValuesType(update.type);\n \n Review comment:\n   maybe add a comment on the above `getOrAdd` call to mention that it never needs to add the field?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-02T11:20:17.221+0000",
          "updated": "2020-04-02T11:20:17.221+0000",
          "started": "2020-04-02T11:20:17.221+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414622",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414730",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "s1monw commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r402339219\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -644,6 +656,13 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n     return true;\n   }\n \n+  private FieldInfo cloneFieldInfo(FieldInfo fi, int fieldNumber) {\n+    return new FieldInfo(fi.name, fieldNumber, fi.hasVectors(), fi.omitsNorms(), fi.hasPayloads(),\n+        fi.getIndexOptions(), fi.getDocValuesType(), fi.getDocValuesGen(), new HashMap<>(fi.attributes()),\n+        fi.getPointDimensionCount(), fi.getPointIndexDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n+\n \n Review comment:\n   extra newline\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-02T14:40:32.705+0000",
          "updated": "2020-04-02T14:40:32.705+0000",
          "started": "2020-04-02T14:40:32.704+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414730",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414731",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "s1monw commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r402341962\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -543,27 +543,39 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n       \n       try {\n         // clone FieldInfos so that we can update their dvGen separately from\n-        // the reader's infos and write them to a new fieldInfos_gen file\n-        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n-        // cannot use builder.add(reader.getFieldInfos()) because it does not\n-        // clone FI.attributes as well FI.dvGen\n+        // the reader's infos and write them to a new fieldInfos_gen file.\n+        int maxFieldNumber = -1;\n+        Map<String, FieldInfo> newFields = new HashMap<>();\n         for (FieldInfo fi : reader.getFieldInfos()) {\n-          FieldInfo clone = builder.add(fi);\n-          // copy the stuff FieldInfos.Builder doesn't copy\n-          for (Entry<String,String> e : fi.attributes().entrySet()) {\n-            clone.putAttribute(e.getKey(), e.getValue());\n-          }\n-          clone.setDocValuesGen(fi.getDocValuesGen());\n+          // cannot use builder.add(fi) because it does not preserve\n+          // the local field number. Field numbers can be different from the global ones\n+          // if the segment was created externally (with IndexWriter#addIndexes(Directory)).\n+          FieldInfo clone = cloneFieldInfo(fi, fi.number);\n+          newFields.put(clone.name, clone);\n+          maxFieldNumber = Math.max(clone.number, maxFieldNumber);\n         }\n \n         // create new fields with the right DV type\n+        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n         for (List<DocValuesFieldUpdates> updates : pendingDVUpdates.values()) {\n           DocValuesFieldUpdates update = updates.get(0);\n-          FieldInfo fieldInfo = builder.getOrAdd(update.field);\n-          fieldInfo.setDocValuesType(update.type);\n+          FieldInfo globalFieldInfo =  builder.getOrAdd(update.field);\n+          globalFieldInfo.setDocValuesType(update.type);\n+          FieldInfo segmentFieldInfo = newFields.get(update.field);\n+          if (segmentFieldInfo == null) {\n+            // the field is not present in this segment so we can fallback to the global fields.\n+            if (globalFieldInfo.number <= maxFieldNumber) {\n+              // the global field number is already used in this segment for a different field so we force a new one locally.\n+              globalFieldInfo = cloneFieldInfo(globalFieldInfo, ++maxFieldNumber);\n \n Review comment:\n   we should set the DV type here too no?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-02T14:40:32.708+0000",
          "updated": "2020-04-02T14:40:32.708+0000",
          "started": "2020-04-02T14:40:32.708+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414731",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414756",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jimczi commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r402394008\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -644,6 +656,13 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n     return true;\n   }\n \n+  private FieldInfo cloneFieldInfo(FieldInfo fi, int fieldNumber) {\n+    return new FieldInfo(fi.name, fieldNumber, fi.hasVectors(), fi.omitsNorms(), fi.hasPayloads(),\n+        fi.getIndexOptions(), fi.getDocValuesType(), fi.getDocValuesGen(), new HashMap<>(fi.attributes()),\n+        fi.getPointDimensionCount(), fi.getPointIndexDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n+\n \n Review comment:\n   ++, https://github.com/apache/lucene-solr/pull/1394/commits/34718cb64e747e56ebc5341f9180d2f12aace029\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-02T15:14:52.665+0000",
          "updated": "2020-04-02T15:14:52.665+0000",
          "started": "2020-04-02T15:14:52.665+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414756",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414757",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jimczi commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r402394140\n \n \n\n ##########\n File path: lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates.java\n ##########\n @@ -1483,6 +1484,83 @@ public void testAddIndexes() throws Exception {\n     IOUtils.close(dir1, dir2);\n   }\n \n+  public void testUpdatesAfterAddIndexes() throws Exception {\n \n Review comment:\n   ++, I pushed https://github.com/apache/lucene-solr/pull/1394/commits/00d755888d4744ff6a1beba17e20580f43841f12\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-02T15:15:02.251+0000",
          "updated": "2020-04-02T15:15:02.251+0000",
          "started": "2020-04-02T15:15:02.251+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414757",
          "issueId": "13295504"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/worklog/414760",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
            "name": "githubbot",
            "key": "githubbot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF GitHub Bot",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "comment": "jimczi commented on pull request #1394: LUCENE-9300: Fix field infos update on doc values update\nURL: https://github.com/apache/lucene-solr/pull/1394#discussion_r402402939\n \n \n\n ##########\n File path: lucene/core/src/java/org/apache/lucene/index/ReadersAndUpdates.java\n ##########\n @@ -543,27 +543,39 @@ public synchronized boolean writeFieldUpdates(Directory dir, FieldInfos.FieldNum\n       \n       try {\n         // clone FieldInfos so that we can update their dvGen separately from\n-        // the reader's infos and write them to a new fieldInfos_gen file\n-        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n-        // cannot use builder.add(reader.getFieldInfos()) because it does not\n-        // clone FI.attributes as well FI.dvGen\n+        // the reader's infos and write them to a new fieldInfos_gen file.\n+        int maxFieldNumber = -1;\n+        Map<String, FieldInfo> newFields = new HashMap<>();\n         for (FieldInfo fi : reader.getFieldInfos()) {\n-          FieldInfo clone = builder.add(fi);\n-          // copy the stuff FieldInfos.Builder doesn't copy\n-          for (Entry<String,String> e : fi.attributes().entrySet()) {\n-            clone.putAttribute(e.getKey(), e.getValue());\n-          }\n-          clone.setDocValuesGen(fi.getDocValuesGen());\n+          // cannot use builder.add(fi) because it does not preserve\n+          // the local field number. Field numbers can be different from the global ones\n+          // if the segment was created externally (with IndexWriter#addIndexes(Directory)).\n+          FieldInfo clone = cloneFieldInfo(fi, fi.number);\n+          newFields.put(clone.name, clone);\n+          maxFieldNumber = Math.max(clone.number, maxFieldNumber);\n         }\n \n         // create new fields with the right DV type\n+        FieldInfos.Builder builder = new FieldInfos.Builder(fieldNumbers);\n         for (List<DocValuesFieldUpdates> updates : pendingDVUpdates.values()) {\n           DocValuesFieldUpdates update = updates.get(0);\n-          FieldInfo fieldInfo = builder.getOrAdd(update.field);\n-          fieldInfo.setDocValuesType(update.type);\n+          FieldInfo globalFieldInfo =  builder.getOrAdd(update.field);\n+          globalFieldInfo.setDocValuesType(update.type);\n \n Review comment:\n   I added an [assertion](https://github.com/apache/lucene-solr/pull/1394/commits/0b5c6c896bcc67f8ec6d9206d5dc9caa5cc5ee81) to check the dv type of the global field but we still need to set the dv type on the cloned field since it is not preserved by the `getOrAdd` call.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
          "created": "2020-04-02T15:26:39.203+0000",
          "updated": "2020-04-02T15:26:39.203+0000",
          "started": "2020-04-02T15:26:39.203+0000",
          "timeSpent": "10m",
          "timeSpentSeconds": 600,
          "id": "414760",
          "issueId": "13295504"
        }
      ]
    },
    "customfield_12313920": null,
    "issuetype": {
      "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
      "id": "1",
      "description": "A problem which impairs or prevents the functions of the product.",
      "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
      "name": "Bug",
      "subtask": false,
      "avatarId": 21133
    },
    "timespent": 15000,
    "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5df618f3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5610da8[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3011c03f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3d1097d8[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ac2eab4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5c6eaf4b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62408cc1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5bd77906[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26bdaf82[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@f8058e9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69c0eb5c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@93fa02b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
    "customfield_12314141": null,
    "customfield_12314140": null,
    "project": {
      "self": "https://issues.apache.org/jira/rest/api/2/project/12310110",
      "id": "12310110",
      "key": "LUCENE",
      "name": "Lucene - Core",
      "projectTypeKey": "software",
      "avatarUrls": {
        "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12310110&avatarId=10061",
        "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310110&avatarId=10061",
        "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310110&avatarId=10061",
        "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310110&avatarId=10061"
      },
      "projectCategory": {
        "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/10150",
        "id": "10150",
        "description": "Lucene-related projects",
        "name": "Lucene"
      }
    },
    "aggregatetimespent": 15000,
    "customfield_12310220": "2020-04-03T11:58:19.163+0000",
    "customfield_12312520": null,
    "customfield_12312521": "Thu Apr 16 20:16:15 UTC 2020",
    "customfield_12310222": "1_*:*_1_*:*_177279556_*|*_5_*:*_1_*:*_0",
    "customfield_12314146": null,
    "customfield_12314145": null,
    "customfield_12314144": null,
    "customfield_12314143": null,
    "resolutiondate": "2020-04-03T12:14:17.414+0000",
    "customfield_12314142": null,
    "workratio": -1,
    "customfield_12312923": null,
    "customfield_12312920": null,
    "customfield_12312921": null,
    "watches": {
      "self": "https://issues.apache.org/jira/rest/api/2/issue/LUCENE-9300/watchers",
      "watchCount": 3,
      "isWatching": false
    },
    "created": "2020-04-01T10:59:37.960+0000",
    "updated": "2020-04-16T20:16:59.503+0000",
    "timeoriginalestimate": null,
    "description": "Today a doc values update creates a new field infos file that contains the original field infos updated for the new generation as well as the new fields created by the doc values update.\r\n\r\nHowever existing fields are cloned through the global fields (shared in the index writer) instead of the local ones (present in the segment). In practice this is not an issue since field numbers are shared between segments created by the same index writer. But this assumption doesn't hold for segments created by different writers and added through IndexWriter#addIndexes(Directory). In this case, the field number of the same field can differ between segments so any doc values update can corrupt the index by assigning the wrong field number to an existing field in the next generation. \r\n\r\nWhen this happens, queries and merges can access wrong fields without throwing any error, leading to a silent corruption in the index.\r\n\r\n \r\n\r\nSince segments are not guaranteed to have the same field number consistently we should ensure that doc values update preserves the segment's field number when rewriting field infos.",
    "customfield_10010": null,
    "timetracking": {
      "remainingEstimate": "0h",
      "timeSpent": "4h 10m",
      "remainingEstimateSeconds": 0,
      "timeSpentSeconds": 15000
    },
    "customfield_12314127": null,
    "customfield_12314126": null,
    "customfield_12314125": null,
    "customfield_12314124": null,
    "customfield_12312340": null,
    "attachment": [],
    "customfield_12314123": null,
    "customfield_12312341": null,
    "customfield_12312220": null,
    "customfield_12314122": null,
    "customfield_12314121": null,
    "customfield_12314120": null,
    "customfield_12314129": null,
    "customfield_12314128": null,
    "summary": "Index corruption with doc values updates and addIndexes",
    "customfield_12314130": null,
    "customfield_12310291": null,
    "customfield_12310290": null,
    "customfield_12311024": null,
    "customfield_12314138": null,
    "customfield_12314137": null,
    "environment": null,
    "customfield_12314136": null,
    "customfield_12314135": null,
    "customfield_12311020": null,
    "customfield_12314134": null,
    "customfield_12313320": "<p style=\"color:red;font-weight:bold;text-align:center\">\r\nThis project has a user mailing list and an IRC channel for support. Please ensure that you have discussed your problem using one of those <a target=\"_blank\"  href=\"https://lucene.apache.org/core/discussion.html#lucenetm-mailing-lists-and-irc\">resources</a> BEFORE creating this ticket.</p>",
    "duedate": null,
    "customfield_12314132": null,
    "customfield_12314131": null,
    "comment": {
      "comments": [
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/comment/17074523",
          "id": "17074523",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jira-bot",
            "name": "jira-bot",
            "key": "jira-bot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF subversion and git services",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "body": "Commit b5c5ebe37cf0ac12caecbd1ab46d5f7ec0762f06 in lucene-solr's branch refs/heads/master from Jim Ferenczi\n[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=b5c5ebe ]\n\nLUCENE-9300: Fix field infos update on doc values update (#1394)\n\nToday a doc values update creates a new field infos file that contains the original field infos updated for the new generation as well as the new fields created by the doc values update.\r\n\r\nHowever existing fields are cloned through the global fields (shared in the index writer) instead of the local ones (present in the segment).\r\nIn practice this is not an issue since field numbers are shared between segments created by the same index writer.\r\nBut this assumption doesn't hold for segments created by different writers and added through IndexWriter#addIndexes(Directory).\r\nIn this case, the field number of the same field can differ between segments so any doc values update can corrupt the index\r\nby assigning the wrong field number to an existing field in the next generation.\r\n\r\nWhen this happens, queries and merges can access wrong fields without throwing any error, leading to a silent corruption in the index.\r\n\r\nThis change ensures that we preserve local field numbers when creating\r\na new field infos generation.",
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jira-bot",
            "name": "jira-bot",
            "key": "jira-bot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF subversion and git services",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "created": "2020-04-03T11:58:19.163+0000",
          "updated": "2020-04-03T11:58:19.163+0000"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/comment/17074526",
          "id": "17074526",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jira-bot",
            "name": "jira-bot",
            "key": "jira-bot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF subversion and git services",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "body": "Commit c2a82d58f5c4e8263a942b85380c5ac156662da8 in lucene-solr's branch refs/heads/branch_8x from Jim Ferenczi\n[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=c2a82d5 ]\n\nLUCENE-9300: Fix field infos update on doc values update (#1394)\n\nToday a doc values update creates a new field infos file that contains the original field infos updated for the new generation as well as the new fields created by the doc values update.\r\n\r\nHowever existing fields are cloned through the global fields (shared in the index writer) instead of the local ones (present in the segment).\r\nIn practice this is not an issue since field numbers are shared between segments created by the same index writer.\r\nBut this assumption doesn't hold for segments created by different writers and added through IndexWriter#addIndexes(Directory).\r\nIn this case, the field number of the same field can differ between segments so any doc values update can corrupt the index\r\nby assigning the wrong field number to an existing field in the next generation.\r\n\r\nWhen this happens, queries and merges can access wrong fields without throwing any error, leading to a silent corruption in the index.\r\n\r\nThis change ensures that we preserve local field numbers when creating\r\na new field infos generation.",
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jira-bot",
            "name": "jira-bot",
            "key": "jira-bot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF subversion and git services",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "created": "2020-04-03T12:03:58.381+0000",
          "updated": "2020-04-03T12:03:58.381+0000"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/comment/17074529",
          "id": "17074529",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jira-bot",
            "name": "jira-bot",
            "key": "jira-bot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF subversion and git services",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "body": "Commit d98e60c6b6326dc17daa971ab777a41bd4dfea34 in lucene-solr's branch refs/heads/branch_8_5 from Jim Ferenczi\n[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=d98e60c ]\n\nLUCENE-9300: Fix field infos update on doc values update (#1394)\n\nToday a doc values update creates a new field infos file that contains the original field infos updated for the new generation as well as the new fields created by the doc values update.\n\nHowever existing fields are cloned through the global fields (shared in the index writer) instead of the local ones (present in the segment).\nIn practice this is not an issue since field numbers are shared between segments created by the same index writer.\nBut this assumption doesn't hold for segments created by different writers and added through IndexWriter#addIndexes(Directory).\nIn this case, the field number of the same field can differ between segments so any doc values update can corrupt the index\nby assigning the wrong field number to an existing field in the next generation.\n\nWhen this happens, queries and merges can access wrong fields without throwing any error, leading to a silent corruption in the index.\n\nThis change ensures that we preserve local field numbers when creating\na new field infos generation.\n",
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jira-bot",
            "name": "jira-bot",
            "key": "jira-bot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF subversion and git services",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "created": "2020-04-03T12:13:47.562+0000",
          "updated": "2020-04-03T12:13:47.562+0000"
        },
        {
          "self": "https://issues.apache.org/jira/rest/api/2/issue/13295504/comment/17085233",
          "id": "17085233",
          "author": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jira-bot",
            "name": "jira-bot",
            "key": "jira-bot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF subversion and git services",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "body": "Commit dab53a8089f78d860f6e046d3676b9a04131addf in lucene-solr's branch refs/heads/branch_7_7 from Jim Ferenczi\n[ https://gitbox.apache.org/repos/asf?p=lucene-solr.git;h=dab53a8 ]\n\nLUCENE-9300: Fix field infos update on doc values update (#1394)\n\nToday a doc values update creates a new field infos file that contains the original field infos updated for the new generation as well as the new fields created by the doc values update.\n\nHowever existing fields are cloned through the global fields (shared in the index writer) instead of the local ones (present in the segment).\nIn practice this is not an issue since field numbers are shared between segments created by the same index writer.\nBut this assumption doesn't hold for segments created by different writers and added through IndexWriter#addIndexes(Directory).\nIn this case, the field number of the same field can differ between segments so any doc values update can corrupt the index\nby assigning the wrong field number to an existing field in the next generation.\n\nWhen this happens, queries and merges can access wrong fields without throwing any error, leading to a silent corruption in the index.\n\nThis change ensures that we preserve local field numbers when creating\na new field infos generation.\n",
          "updateAuthor": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jira-bot",
            "name": "jira-bot",
            "key": "jira-bot",
            "avatarUrls": {
              "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
              "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
              "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
              "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "ASF subversion and git services",
            "active": true,
            "timeZone": "Etc/UTC"
          },
          "created": "2020-04-16T20:16:15.465+0000",
          "updated": "2020-04-16T20:16:15.465+0000"
        }
      ],
      "maxResults": 4,
      "total": 4,
      "startAt": 0
    },
    "customfield_12311820": "0|z0d5ts:",
    "customfield_12314139": null
  }
}